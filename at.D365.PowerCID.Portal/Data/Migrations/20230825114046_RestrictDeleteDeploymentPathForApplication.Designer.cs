// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using at.D365.PowerCID.Portal.Data.Models;

#nullable disable

namespace at.D365.PowerCID.Portal.Data.Migrations
{
    [DbContext(typeof(atPowerCIDContext))]
    [Migration("20230825114046_RestrictDeleteDeploymentPathForApplication")]
    partial class RestrictDeleteDeploymentPathForApplication
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AsyncJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<Guid?>("AsyncOperationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsManaged")
                        .HasColumnType("bit");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Action");

                    b.ToTable("AsyncJob", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created On");

                    b.Property<string>("DeploymentDetails")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Deployment Details");

                    b.Property<string>("ErrorMessage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Error Message");

                    b.Property<bool?>("ExportOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Finish Time");

                    b.Property<int?>("ImportTargetEnvironment")
                        .HasColumnType("int")
                        .HasColumnName("Import Target Environment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("Progress")
                        .HasColumnType("float");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<int?>("Solution")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Start Time");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TargetEnvironment")
                        .HasColumnType("int")
                        .HasColumnName("Target Environment");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("Result");

                    b.HasIndex("Solution");

                    b.HasIndex("Status");

                    b.HasIndex("TargetEnvironment");

                    b.HasIndex("Type");

                    b.ToTable("Action", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ActionResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ActionResult", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Result = "success"
                        },
                        new
                        {
                            Id = 2,
                            Result = "failure"
                        });
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ActionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ActionStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "queued"
                        },
                        new
                        {
                            Id = 2,
                            Status = "in progress"
                        },
                        new
                        {
                            Id = 3,
                            Status = "completed"
                        });
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("ActionType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "export"
                        },
                        new
                        {
                            Id = 2,
                            Type = "import"
                        },
                        new
                        {
                            Id = 3,
                            Type = "apply upgrade"
                        },
                        new
                        {
                            Id = 4,
                            Type = "enable flows"
                        });
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created On");

                    b.Property<int>("DevelopmentEnvironment")
                        .HasColumnType("int")
                        .HasColumnName("Development Environment");

                    b.Property<string>("InternalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified By");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified On");

                    b.Property<Guid?>("MsId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MS Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("OrdinalNumber")
                        .HasColumnType("int")
                        .HasColumnName("Ordinal Number");

                    b.Property<int>("Publisher")
                        .HasColumnType("int");

                    b.Property<string>("SolutionUniqueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Solution Unique Name");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DevelopmentEnvironment");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("Publisher");

                    b.ToTable("Application", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ApplicationDeploymentPath", b =>
                {
                    b.Property<int>("Application")
                        .HasColumnType("int");

                    b.Property<int>("DeploymentPath")
                        .HasColumnType("int");

                    b.Property<int?>("HierarchieNumber")
                        .HasColumnType("int");

                    b.HasKey("Application", "DeploymentPath");

                    b.HasIndex("DeploymentPath");

                    b.ToTable("ApplicationDeploymentPath", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ConnectionReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Application")
                        .HasColumnType("int");

                    b.Property<string>("ConnectorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Connector Id");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created On");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogicalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Logical Name");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified By");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified On");

                    b.Property<Guid>("MsId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Ms Id");

                    b.HasKey("Id");

                    b.HasIndex("Application");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("ConnectionReference", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.DeploymentPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created On");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified By");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified On");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("Tenant");

                    b.ToTable("Deploymentpath", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.DeploymentPathEnvironment", b =>
                {
                    b.Property<int>("DeploymentPath")
                        .HasColumnType("int");

                    b.Property<int>("Environment")
                        .HasColumnType("int");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.HasKey("DeploymentPath", "Environment");

                    b.HasIndex("Environment");

                    b.ToTable("DeploymentPathEnvironment", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Environment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BasicUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Basic URL");

                    b.Property<string>("ConnectionsOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created On");

                    b.Property<bool>("DeployUnmanaged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDevelopmentEnvironment")
                        .HasColumnType("bit")
                        .HasColumnName("Is Development Environment");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified By");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified On");

                    b.Property<Guid>("MsId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MS Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("OrdinalNumber")
                        .HasColumnType("int")
                        .HasColumnName("Ordinal Number");

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("Tenant");

                    b.ToTable("Environment", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.EnvironmentVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Application")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created On");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Display Name");

                    b.Property<string>("LogicalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Logical Name");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified By");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified On");

                    b.Property<Guid>("MsId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Ms Id");

                    b.HasKey("Id");

                    b.HasIndex("Application");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("EnvironmentVariable", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.EnvironmentVariableEnvironment", b =>
                {
                    b.Property<int>("EnvironmentVariable")
                        .HasColumnType("int");

                    b.Property<int>("Environment")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnvironmentVariable", "Environment");

                    b.HasIndex("Environment");

                    b.ToTable("EnvironmentVariableEnvironment", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Environment")
                        .HasColumnType("int");

                    b.Property<Guid>("MsId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MS Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Environment");

                    b.ToTable("Publisher", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Application")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created On");

                    b.Property<bool?>("EnableWorkflows")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Enable Workflows");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("Modified By");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Modified On");

                    b.Property<Guid>("MsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("OverwriteUnmanagedCustomizations")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Overwrite Unmanaged Customizations");

                    b.Property<int>("SolutionType")
                        .HasColumnType("int");

                    b.Property<string>("UniqueName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Unique Name");

                    b.Property<string>("UrlMakerportal")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("URL Makerportal");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Application");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Solution", (string)null);

                    b.HasDiscriminator<int>("SolutionType");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("DisablePatchCreation")
                        .HasColumnType("bit");

                    b.Property<int>("GitHubInstallationId")
                        .HasColumnType("int");

                    b.Property<string>("GitHubRepositoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MsId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MS Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tenant", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("MsId")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MS Id");

                    b.Property<bool>("RemoveAdminRole")
                        .HasColumnType("bit");

                    b.Property<int>("Tenant")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Tenant");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ConnectionReferenceEnvironment", b =>
                {
                    b.Property<int>("ConnectionReference")
                        .HasColumnType("int");

                    b.Property<int>("Environment")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConnectionReference", "Environment");

                    b.HasIndex("Environment");

                    b.ToTable("ConnectionReferenceEnvironment", (string)null);
                });

            modelBuilder.Entity("UserEnvironment", b =>
                {
                    b.Property<int>("User")
                        .HasColumnType("int");

                    b.Property<int>("Environment")
                        .HasColumnType("int");

                    b.HasKey("User", "Environment");

                    b.HasIndex("Environment");

                    b.ToTable("UserEnvironment", (string)null);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Patch", b =>
                {
                    b.HasBaseType("at.D365.PowerCID.Portal.Data.Models.Solution");

                    b.Property<bool>("WasDeleted")
                        .HasColumnType("bit");

                    b.ToTable("Solution", (string)null);

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Upgrade", b =>
                {
                    b.HasBaseType("at.D365.PowerCID.Portal.Data.Models.Solution");

                    b.Property<bool>("ApplyManually")
                        .HasColumnType("bit")
                        .HasColumnName("Apply Manually");

                    b.ToTable("Solution", (string)null);

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AsyncJob", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Action", "ActionNavigation")
                        .WithMany("AsyncJobs")
                        .HasForeignKey("Action")
                        .IsRequired()
                        .HasConstraintName("FK_AsyncJob_Action");

                    b.Navigation("ActionNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Action", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "CreatedByNavigation")
                        .WithMany("Actions")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Action_Created_By");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.ActionResult", "ResultNavigation")
                        .WithMany("Actions")
                        .HasForeignKey("Result")
                        .HasConstraintName("FK_Action_Result");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Solution", "SolutionNavigation")
                        .WithMany("Actions")
                        .HasForeignKey("Solution")
                        .HasConstraintName("FK_Action_Solution");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.ActionStatus", "StatusNavigation")
                        .WithMany("Actions")
                        .HasForeignKey("Status")
                        .HasConstraintName("FK_Action_Status");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Environment", "TargetEnvironmentNavigation")
                        .WithMany("Actions")
                        .HasForeignKey("TargetEnvironment")
                        .IsRequired()
                        .HasConstraintName("FK_Action_Target_Environment");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.ActionType", "TypeNavigation")
                        .WithMany("Actions")
                        .HasForeignKey("Type")
                        .IsRequired()
                        .HasConstraintName("FK_Action_Type");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ResultNavigation");

                    b.Navigation("SolutionNavigation");

                    b.Navigation("StatusNavigation");

                    b.Navigation("TargetEnvironmentNavigation");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Application", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "CreatedByNavigation")
                        .WithMany("ApplicationCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Application_Created_By");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Environment", "DevelopmentEnvironmentNavigation")
                        .WithMany("ApplicationDevelopmentEnviromentNavigation")
                        .HasForeignKey("DevelopmentEnvironment")
                        .IsRequired()
                        .HasConstraintName("FK_Application_Development_Environment");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("ApplicationModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Application_Modified_By");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Publisher", "PublisherNavigation")
                        .WithMany("Applications")
                        .HasForeignKey("Publisher")
                        .IsRequired()
                        .HasConstraintName("FK_Application_Publisher");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("DevelopmentEnvironmentNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("PublisherNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ApplicationDeploymentPath", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Application", "ApplicationNavigation")
                        .WithMany("ApplicationDeploymentPaths")
                        .HasForeignKey("Application")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ApplicationDeploymentPath_Application");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.DeploymentPath", "DeploymentPathNavigation")
                        .WithMany("ApplicationDeploymentPaths")
                        .HasForeignKey("DeploymentPath")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ApplicationDeploymentPath_DeploymentPath");

                    b.Navigation("ApplicationNavigation");

                    b.Navigation("DeploymentPathNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ConnectionReference", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Application", "ApplicationNavigation")
                        .WithMany("ConnectionReferences")
                        .HasForeignKey("Application")
                        .IsRequired()
                        .HasConstraintName("FK_ConnectionReference_Application");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "CreatedByNavigation")
                        .WithMany("ConnectionReferenceCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_ConnectionReference_Created_By");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("ConnectionReferenceModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK_ConnectionReference_Modified_By");

                    b.Navigation("ApplicationNavigation");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.DeploymentPath", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "CreatedByNavigation")
                        .WithMany("DeploymentPathCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_DeploymentPath_Created_By");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("DeploymentPathModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK_DeploymentPath_Modified_By");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Tenant", "TenantNavigation")
                        .WithMany("DeploymentPaths")
                        .HasForeignKey("Tenant")
                        .IsRequired()
                        .HasConstraintName("FK_DeploymentPath_Tenant");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("TenantNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.DeploymentPathEnvironment", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.DeploymentPath", "DeploymentPathNavigation")
                        .WithMany("DeploymentPathEnvironments")
                        .HasForeignKey("DeploymentPath")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DeploymentPathEnvironment_DeploymentPath");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Environment", "EnvironmentNavigation")
                        .WithMany("DeploymentPathEnvironments")
                        .HasForeignKey("Environment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DeploymentPathEnvironment_Environment");

                    b.Navigation("DeploymentPathNavigation");

                    b.Navigation("EnvironmentNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Environment", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "CreatedByNavigation")
                        .WithMany("EnvironmentCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Environment_Created_By");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("EnvironmentModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Environment_Modified_By");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Tenant", "TenantNavigation")
                        .WithMany("Environments")
                        .HasForeignKey("Tenant")
                        .IsRequired()
                        .HasConstraintName("FK_Environment_Tenant");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("TenantNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.EnvironmentVariable", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Application", "ApplicationNavigation")
                        .WithMany("EnvironmentVariables")
                        .HasForeignKey("Application")
                        .IsRequired();

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "CreatedByNavigation")
                        .WithMany("EnvironmentVariableCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired();

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("EnvironmentVariableModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired();

                    b.Navigation("ApplicationNavigation");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.EnvironmentVariableEnvironment", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Environment", "EnvironmentNavigation")
                        .WithMany("EnvironmentVariableEnvironments")
                        .HasForeignKey("Environment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.EnvironmentVariable", "EnvironmentVariableNavigation")
                        .WithMany("EnvironmentVariableEnvironments")
                        .HasForeignKey("EnvironmentVariable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnvironmentNavigation");

                    b.Navigation("EnvironmentVariableNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Publisher", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Environment", "EnvironmentNavigation")
                        .WithMany("Publishers")
                        .HasForeignKey("Environment")
                        .IsRequired();

                    b.Navigation("EnvironmentNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Solution", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Application", "ApplicationNavigation")
                        .WithMany("Solutions")
                        .HasForeignKey("Application")
                        .IsRequired()
                        .HasConstraintName("FK_Solution_Application");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "CreatedByNavigation")
                        .WithMany("SolutionCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Solution_Created_by");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "ModifiedByNavigation")
                        .WithMany("SolutionModifiedByNavigations")
                        .HasForeignKey("ModifiedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Solution_Modified_by");

                    b.Navigation("ApplicationNavigation");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.User", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Tenant", "TenantNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Tenant")
                        .IsRequired();

                    b.Navigation("TenantNavigation");
                });

            modelBuilder.Entity("ConnectionReferenceEnvironment", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.ConnectionReference", "ConnectionReferenceNavigation")
                        .WithMany("ConnectionReferenceEnvironments")
                        .HasForeignKey("ConnectionReference")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConnectionReferenceEnvironment_ConnectionReference");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Environment", "EnvironmentNavigation")
                        .WithMany("ConnectionReferenceEnvironments")
                        .HasForeignKey("Environment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConnectionReferenceEnvironment_Environment");

                    b.Navigation("ConnectionReferenceNavigation");

                    b.Navigation("EnvironmentNavigation");
                });

            modelBuilder.Entity("UserEnvironment", b =>
                {
                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.Environment", "EnvironmentNavigation")
                        .WithMany("UserEnvironments")
                        .HasForeignKey("Environment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserEnvironment_Environment");

                    b.HasOne("at.D365.PowerCID.Portal.Data.Models.User", "UserNavigation")
                        .WithMany("UserEnvironments")
                        .HasForeignKey("User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserEnvironment_User");

                    b.Navigation("EnvironmentNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Action", b =>
                {
                    b.Navigation("AsyncJobs");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ActionResult", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ActionStatus", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ActionType", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Application", b =>
                {
                    b.Navigation("ApplicationDeploymentPaths");

                    b.Navigation("ConnectionReferences");

                    b.Navigation("EnvironmentVariables");

                    b.Navigation("Solutions");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.ConnectionReference", b =>
                {
                    b.Navigation("ConnectionReferenceEnvironments");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.DeploymentPath", b =>
                {
                    b.Navigation("ApplicationDeploymentPaths");

                    b.Navigation("DeploymentPathEnvironments");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Environment", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("ApplicationDevelopmentEnviromentNavigation");

                    b.Navigation("ConnectionReferenceEnvironments");

                    b.Navigation("DeploymentPathEnvironments");

                    b.Navigation("EnvironmentVariableEnvironments");

                    b.Navigation("Publishers");

                    b.Navigation("UserEnvironments");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.EnvironmentVariable", b =>
                {
                    b.Navigation("EnvironmentVariableEnvironments");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Publisher", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Solution", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.Tenant", b =>
                {
                    b.Navigation("DeploymentPaths");

                    b.Navigation("Environments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("at.D365.PowerCID.Portal.Data.Models.User", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("ApplicationCreatedByNavigations");

                    b.Navigation("ApplicationModifiedByNavigations");

                    b.Navigation("ConnectionReferenceCreatedByNavigation");

                    b.Navigation("ConnectionReferenceModifiedByNavigation");

                    b.Navigation("DeploymentPathCreatedByNavigations");

                    b.Navigation("DeploymentPathModifiedByNavigations");

                    b.Navigation("EnvironmentCreatedByNavigations");

                    b.Navigation("EnvironmentModifiedByNavigations");

                    b.Navigation("EnvironmentVariableCreatedByNavigations");

                    b.Navigation("EnvironmentVariableModifiedByNavigations");

                    b.Navigation("SolutionCreatedByNavigations");

                    b.Navigation("SolutionModifiedByNavigations");

                    b.Navigation("UserEnvironments");
                });
#pragma warning restore 612, 618
        }
    }
}
